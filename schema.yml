openapi: 3.0.3
info:
  title: vms_api
  version: 1.0.0
  description: "\n    API for managing vouchers, including creation, generation, and\
    \ status updates (paid, expired, redeemed). \n    Supports user management and\
    \ voucher lifecycle handling. Built for efficient voucher tracking and updates\n"
paths:
  /vms/api/audit-trails/:
    get:
      operationId: vms_api_audit_trails_list
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrails'
          description: ''
    post:
      operationId: vms_api_audit_trails_create
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuditTrails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuditTrails'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrails'
          description: ''
  /vms/api/audit-trails/{id}/:
    get:
      operationId: vms_api_audit_trails_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this audit trail.
        required: true
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrails'
          description: ''
    put:
      operationId: vms_api_audit_trails_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this audit trail.
        required: true
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuditTrails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuditTrails'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrails'
          description: ''
    patch:
      operationId: vms_api_audit_trails_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this audit trail.
        required: true
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAuditTrails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAuditTrails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAuditTrails'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrails'
          description: ''
    delete:
      operationId: vms_api_audit_trails_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this audit trail.
        required: true
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /vms/api/clients/:
    get:
      operationId: vms_api_clients_list
      description: display a list of all clients
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedClientListList'
          description: ''
  /vms/api/clients/{id}/:
    get:
      operationId: vms_api_clients_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCrud'
          description: ''
    put:
      operationId: vms_api_clients_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCrud'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientCrud'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientCrud'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCrud'
          description: ''
    delete:
      operationId: vms_api_clients_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /vms/api/clients/add/:
    post:
      operationId: vms_api_clients_add_create
      description: Add a new client and log the audit action
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCrud'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientCrud'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientCrud'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCrud'
          description: ''
  /vms/api/companies/:
    get:
      operationId: vms_api_companies_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
          description: ''
    post:
      operationId: vms_api_companies_create
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Company'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
  /vms/api/companies/{id}/:
    get:
      operationId: vms_api_companies_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company.
        required: true
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    put:
      operationId: vms_api_companies_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company.
        required: true
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Company'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    patch:
      operationId: vms_api_companies_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company.
        required: true
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCompany'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCompany'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCompany'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    delete:
      operationId: vms_api_companies_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company.
        required: true
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /vms/api/groups/:
    get:
      operationId: vms_api_groups_list
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupCustom'
          description: ''
    post:
      operationId: vms_api_groups_create
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCustom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupCustom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupCustom'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCustom'
          description: ''
  /vms/api/groups/{id}/:
    get:
      operationId: vms_api_groups_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCustom'
          description: ''
    put:
      operationId: vms_api_groups_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCustom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupCustom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupCustom'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCustom'
          description: ''
    patch:
      operationId: vms_api_groups_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroupCustom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroupCustom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroupCustom'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCustom'
          description: ''
    delete:
      operationId: vms_api_groups_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /vms/api/redemptions/:
    get:
      operationId: vms_api_redemptions_list
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Redemption'
          description: ''
    post:
      operationId: vms_api_redemptions_create
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Redemption'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Redemption'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Redemption'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Redemption'
          description: ''
  /vms/api/redemptions/{id}/:
    get:
      operationId: vms_api_redemptions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this redemption.
        required: true
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Redemption'
          description: ''
    put:
      operationId: vms_api_redemptions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this redemption.
        required: true
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Redemption'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Redemption'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Redemption'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Redemption'
          description: ''
    patch:
      operationId: vms_api_redemptions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this redemption.
        required: true
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRedemption'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRedemption'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRedemption'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Redemption'
          description: ''
    delete:
      operationId: vms_api_redemptions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this redemption.
        required: true
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /vms/api/shops/:
    get:
      operationId: vms_api_shops_list
      parameters:
      - in: query
        name: company
        schema:
          type: integer
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shop'
          description: ''
    post:
      operationId: vms_api_shops_create
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Shop'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
  /vms/api/shops/{id}/:
    get:
      operationId: vms_api_shops_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop.
        required: true
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
    put:
      operationId: vms_api_shops_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop.
        required: true
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Shop'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
    patch:
      operationId: vms_api_shops_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop.
        required: true
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShop'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
    delete:
      operationId: vms_api_shops_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop.
        required: true
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /vms/api/users/:
    get:
      operationId: vms_api_users_list
      description: |-
        created, read, update, delete users:
        view only for authenticated users with right permissions
      parameters:
      - in: query
        name: company
        schema:
          type: integer
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: vms_api_users_create
      description: |-
        created, read, update, delete users:
        view only for authenticated users with right permissions
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /vms/api/users/{id}/:
    get:
      operationId: vms_api_users_retrieve
      description: |-
        created, read, update, delete users:
        view only for authenticated users with right permissions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: vms_api_users_update
      description: |-
        created, read, update, delete users:
        view only for authenticated users with right permissions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: vms_api_users_partial_update
      description: |-
        created, read, update, delete users:
        view only for authenticated users with right permissions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: vms_api_users_destroy
      description: |-
        created, read, update, delete users:
        view only for authenticated users with right permissions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /vms/api/voucher_requests/:
    get:
      operationId: vms_api_voucher_requests_list
      description: |-
        created, read, update, delete Voucher_requests:
        view only for authenticated users with right permissions
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: request_status
        schema:
          type: string
          enum:
          - approved
          - paid
          - pending
          - rejected
        description: |-
          * `pending` - Pending
          * `paid` - Paid
          * `approved` - Approved
          * `rejected` - Rejected
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVoucherRequestListList'
          description: ''
  /vms/api/voucher_requests/{id}/:
    get:
      operationId: vms_api_voucher_requests_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherRequestCrud'
          description: ''
    put:
      operationId: vms_api_voucher_requests_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoucherRequestCrud'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VoucherRequestCrud'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VoucherRequestCrud'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherRequestCrud'
          description: modified
        '400':
          description: 'Bad request: When the status is ''pending'', the request can
            only be modified to ''paid'' or ''rejected''. When the status is ''paid'',
            it can only be modified to ''rejected'' or ''approved''. Once the status
            is ''approved'' or ''rejected'', it cannot be modified.'
        '403':
          description: Forbiden
        '401':
          description: Non authorize(not authenticated)
    delete:
      operationId: vms_api_voucher_requests_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /vms/api/voucher_requests/add/:
    post:
      operationId: vms_api_voucher_requests_add_create
      description: Create a new VoucherRequest
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoucherRequestCrud'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VoucherRequestCrud'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VoucherRequestCrud'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherRequestCrud'
          description: ''
  /vms/api/vouchers/:
    get:
      operationId: vms_api_vouchers_list
      description: |-
        created, read, update, delete Vouchers:
        view only for authenticated users with right permissions
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: redemption__redemption_date
        schema:
          type: string
          format: date-time
      - in: query
        name: redemption__shop
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: voucher_request
        schema:
          type: integer
      - in: query
        name: voucher_status
        schema:
          type: string
          enum:
          - cancelled
          - expired
          - issued
          - provisional
          - redeemed
        description: |-
          * `provisional` - Provisional
          * `issued` - Issued
          * `expired` - Expired
          * `redeemed` - Redeemed
          * `cancelled` - Cancelled
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVoucherList'
          description: ''
    post:
      operationId: vms_api_vouchers_create
      description: |-
        created, read, update, delete Vouchers:
        view only for authenticated users with right permissions
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Voucher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Voucher'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Voucher'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voucher'
          description: ''
  /vms/api/vouchers/{id}/:
    get:
      operationId: vms_api_vouchers_retrieve
      description: |-
        created, read, update, delete Vouchers:
        view only for authenticated users with right permissions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this voucher.
        required: true
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voucher'
          description: ''
    put:
      operationId: vms_api_vouchers_update
      description: |-
        created, read, update, delete Vouchers:
        view only for authenticated users with right permissions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this voucher.
        required: true
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Voucher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Voucher'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Voucher'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voucher'
          description: ''
    patch:
      operationId: vms_api_vouchers_partial_update
      description: |-
        created, read, update, delete Vouchers:
        view only for authenticated users with right permissions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this voucher.
        required: true
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVoucher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVoucher'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVoucher'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voucher'
          description: ''
    delete:
      operationId: vms_api_vouchers_destroy
      description: |-
        created, read, update, delete Vouchers:
        view only for authenticated users with right permissions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this voucher.
        required: true
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /vms/api/vouchers/{id}/redeem/:
    post:
      operationId: vms_api_vouchers_redeem_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Voucher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Voucher'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Voucher'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voucher'
          description: ''
  /vms/auth/permissions/:
    get:
      operationId: vms_auth_permissions_list
      description: |-
        This view allows listing all the permissions available in the application.
        Only authenticated users who have view_permission permission can access it.

        This view is read-only (GET). To create, update, or delete permissions,
        a user with the appropriate administrative permissions must log into the Django admin interface.
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PermissionsList'
          description: ''
  /vms/auth/token/:
    post:
      operationId: vms_auth_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /vms/auth/token/refresh/:
    post:
      operationId: vms_auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /vms/auth/token/verify/:
    post:
      operationId: vms_auth_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /vms/auth/users/:
    get:
      operationId: vms_auth_users_list
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: vms_auth_users_create
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterUser'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterUser'
          description: ''
  /vms/auth/users/{id}/:
    get:
      operationId: vms_auth_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: vms_auth_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: vms_auth_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: vms_auth_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /vms/auth/users/activation/:
    post:
      operationId: vms_auth_users_activation_create
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /vms/auth/users/me/:
    get:
      operationId: vms_auth_users_me_retrieve
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentUser'
          description: ''
    put:
      operationId: vms_auth_users_me_update
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrentUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CurrentUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CurrentUser'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentUser'
          description: ''
    patch:
      operationId: vms_auth_users_me_partial_update
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCurrentUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCurrentUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCurrentUser'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentUser'
          description: ''
    delete:
      operationId: vms_auth_users_me_destroy
      tags:
      - vms
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /vms/auth/users/resend_activation/:
    post:
      operationId: vms_auth_users_resend_activation_create
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /vms/auth/users/reset_password/:
    post:
      operationId: vms_auth_users_reset_password_create
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /vms/auth/users/reset_password_confirm/:
    post:
      operationId: vms_auth_users_reset_password_confirm_create
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /vms/auth/users/reset_username/:
    post:
      operationId: vms_auth_users_reset_username_create
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /vms/auth/users/reset_username_confirm/:
    post:
      operationId: vms_auth_users_reset_username_confirm_create
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /vms/auth/users/set_password/:
    post:
      operationId: vms_auth_users_set_password_create
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
  /vms/auth/users/set_username/:
    post:
      operationId: vms_auth_users_set_username_create
      tags:
      - vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
components:
  schemas:
    ActionEnum:
      enum:
      - add
      - update
      - delete
      type: string
      description: |-
        * `add` - Add
        * `update` - Update
        * `delete` - Delete
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - token
      - uid
    AuditTrails:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        datetime:
          type: string
          format: date-time
          readOnly: true
        action:
          readOnly: true
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ActionEnum'
          - $ref: '#/components/schemas/NullEnum'
        table_name:
          type: string
          readOnly: true
          nullable: true
        object_id:
          type: integer
          readOnly: true
          nullable: true
        description:
          type: string
          readOnly: true
          nullable: true
        executed_by:
          type: string
          readOnly: true
      required:
      - action
      - datetime
      - description
      - executed_by
      - id
      - object_id
      - table_name
    ClientCrud:
      type: object
      description: serializer for client crud
      properties:
        id:
          type: integer
          readOnly: true
        firstname:
          type: string
          maxLength: 70
        lastname:
          type: string
          maxLength: 70
        email:
          type: string
          format: email
          maxLength: 50
        contact:
          type: string
          maxLength: 20
        logo:
          type: string
          format: uri
          nullable: true
          maxLength: 255
        client_voucher_requests:
          type: array
          items:
            $ref: '#/components/schemas/VoucherRequestList'
          readOnly: true
      required:
      - client_voucher_requests
      - contact
      - email
      - firstname
      - id
      - lastname
    ClientList:
      type: object
      description: serializer for client list
      properties:
        id:
          type: integer
          readOnly: true
        firstname:
          type: string
          maxLength: 70
        lastname:
          type: string
          maxLength: 70
        email:
          type: string
          format: email
          maxLength: 50
        contact:
          type: string
          maxLength: 20
        logo:
          type: string
          format: uri
          nullable: true
          maxLength: 255
      required:
      - contact
      - email
      - firstname
      - id
      - lastname
    Company:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        company_name:
          type: string
          maxLength: 70
      required:
      - company_name
      - id
    CurrentUser:
      type: object
      description: Serializer for retrieving the current user's basic details.
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - id
      - last_login
      - username
    GroupCustom:
      type: object
      description: Serializer for the list of groups with hyperlinking
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 150
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/PermissionsList'
      required:
      - id
      - name
      - permissions
    NullEnum:
      enum:
      - null
    PaginatedClientListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ClientList'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaginatedVoucherList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Voucher'
    PaginatedVoucherRequestListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/VoucherRequestList'
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - new_password
      - token
      - uid
    PatchedAuditTrails:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        datetime:
          type: string
          format: date-time
          readOnly: true
        action:
          readOnly: true
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ActionEnum'
          - $ref: '#/components/schemas/NullEnum'
        table_name:
          type: string
          readOnly: true
          nullable: true
        object_id:
          type: integer
          readOnly: true
          nullable: true
        description:
          type: string
          readOnly: true
          nullable: true
        executed_by:
          type: string
          readOnly: true
    PatchedCompany:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        company_name:
          type: string
          maxLength: 70
    PatchedCurrentUser:
      type: object
      description: Serializer for retrieving the current user's basic details.
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PatchedGroupCustom:
      type: object
      description: Serializer for the list of groups with hyperlinking
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 150
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/PermissionsList'
    PatchedRedemption:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        redeemed_on:
          type: string
          format: date-time
          readOnly: true
        till_no:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        redeemed_by:
          type: string
          readOnly: true
        redeemed_at:
          type: string
          readOnly: true
        voucher:
          type: integer
          nullable: true
    PatchedShop:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        location:
          type: string
          maxLength: 100
        address:
          type: string
          nullable: true
          maxLength: 150
        company:
          allOf:
          - $ref: '#/components/schemas/Company'
          readOnly: true
        company_id:
          type: integer
          writeOnly: true
    PatchedUser:
      type: object
      description: Create, update, delete, and view users.
      properties:
        id:
          type: integer
          readOnly: true
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        username:
          type: string
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        company:
          type: integer
          nullable: true
        permissions:
          type: string
          readOnly: true
        user_groups:
          type: string
          readOnly: true
        groups:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        user_permissions:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
    PatchedVoucher:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        voucher_ref:
          type: string
          nullable: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        voucher_request:
          type: integer
        date_time_created:
          type: string
          format: date-time
        expiry_date:
          type: string
          format: date
          nullable: true
        extention_date:
          type: string
          format: date
          nullable: true
        voucher_status:
          $ref: '#/components/schemas/VoucherStatusEnum'
        redemption:
          type: array
          items:
            type: string
          readOnly: true
    PermissionsList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        codename:
          type: string
          maxLength: 100
      required:
      - codename
      - id
      - name
    Redemption:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        redeemed_on:
          type: string
          format: date-time
          readOnly: true
        till_no:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        redeemed_by:
          type: string
          readOnly: true
        redeemed_at:
          type: string
          readOnly: true
        voucher:
          type: integer
          nullable: true
      required:
      - id
      - redeemed_at
      - redeemed_by
      - redeemed_on
    RegisterUser:
      type: object
      description: Create an account for a supervisor.
      properties:
        id:
          type: integer
          readOnly: true
        company:
          type: integer
          nullable: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
      required:
      - id
      - password
      - username
    RequestStatusEnum:
      enum:
      - pending
      - paid
      - approved
      - rejected
      type: string
      description: |-
        * `pending` - Pending
        * `paid` - Paid
        * `approved` - Approved
        * `rejected` - Rejected
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_username:
          type: string
          title: Username
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
      required:
      - current_password
      - new_username
    Shop:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        location:
          type: string
          maxLength: 100
        address:
          type: string
          nullable: true
          maxLength: 150
        company:
          allOf:
          - $ref: '#/components/schemas/Company'
          readOnly: true
        company_id:
          type: integer
          writeOnly: true
      required:
      - company
      - company_id
      - id
      - location
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    User:
      type: object
      description: Create, update, delete, and view users.
      properties:
        id:
          type: integer
          readOnly: true
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        username:
          type: string
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        company:
          type: integer
          nullable: true
        permissions:
          type: string
          readOnly: true
        user_groups:
          type: string
          readOnly: true
        groups:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        user_permissions:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
      required:
      - id
      - last_login
      - permissions
      - user_groups
    UsernameResetConfirm:
      type: object
      properties:
        new_username:
          type: string
          title: Username
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
      required:
      - new_username
    ValidityTypeEnum:
      enum:
      - week
      - month
      type: string
      description: |-
        * `week` - Week
        * `month` - Month
    Voucher:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        voucher_ref:
          type: string
          nullable: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        voucher_request:
          type: integer
        date_time_created:
          type: string
          format: date-time
        expiry_date:
          type: string
          format: date
          nullable: true
        extention_date:
          type: string
          format: date
          nullable: true
        voucher_status:
          $ref: '#/components/schemas/VoucherStatusEnum'
        redemption:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - id
      - redemption
      - voucher_request
    VoucherRequestCrud:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        request_ref:
          type: string
          readOnly: true
          nullable: true
        client:
          type: integer
          nullable: true
        request_status:
          $ref: '#/components/schemas/RequestStatusEnum'
        amount:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        date_time_recorded:
          type: string
          format: date-time
          readOnly: true
        quantity_of_vouchers:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        validity_type:
          allOf:
          - $ref: '#/components/schemas/ValidityTypeEnum'
          description: |-
            Type of validity, either 'week' or 'month'

            * `week` - Week
            * `month` - Month
        validity_periode:
          type: integer
          maximum: 12
          minimum: -2147483648
          nullable: true
          description: Maximum validity period (1 to 12 months or weeks)
        date_time_approved:
          type: string
          format: date-time
          nullable: true
        approved_by:
          type: integer
          nullable: true
      required:
      - date_time_recorded
      - id
      - request_ref
    VoucherRequestList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        request_ref:
          type: string
          readOnly: true
          nullable: true
        date_time_recorded:
          type: string
          format: date-time
          readOnly: true
        quantity_of_vouchers:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        amount:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        request_status:
          $ref: '#/components/schemas/RequestStatusEnum'
        date_time_approved:
          type: string
          format: date-time
          nullable: true
        validity_type:
          allOf:
          - $ref: '#/components/schemas/ValidityTypeEnum'
          description: |-
            Type of validity, either 'week' or 'month'

            * `week` - Week
            * `month` - Month
        validity_periode:
          type: integer
          maximum: 12
          minimum: -2147483648
          nullable: true
          description: Maximum validity period (1 to 12 months or weeks)
        recorded_by:
          type: integer
          nullable: true
        approved_by:
          type: integer
          nullable: true
        client:
          type: integer
          nullable: true
      required:
      - date_time_recorded
      - id
      - request_ref
    VoucherStatusEnum:
      enum:
      - provisional
      - issued
      - expired
      - redeemed
      - cancelled
      type: string
      description: |-
        * `provisional` - Provisional
        * `issued` - Issued
        * `expired` - Expired
        * `redeemed` - Redeemed
        * `cancelled` - Cancelled
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
